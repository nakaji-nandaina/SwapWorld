name: Build Pygame Application

on:
  push:
    branches: [ main ]
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          architecture: 'x64'

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build Executable
        run: |
          pyinstaller --onefile --noconsole --add-data "Images;Images" --add-data "Worlds;Worlds" main.py

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: pygame-app-${{ matrix.os }}
          path: |
            dist/main.exe        # Windows executable
            dist/main            # macOS/Linux executable

      - name: Publish Release
        if: github.event_name == 'release' && github.event.action == 'created'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/main.exe        # Windows executable
            dist/main            # macOS/Linux executable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
